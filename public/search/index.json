[{"content":" 我尝试使用pinia储存用户的登录状态，使用pinia.use(piniaPluginPersistedstate)，使得pinia能够永久化存储，以便当页面刷新时pinia数据不会丢失。但是当登录两个用户时，两个用户的数据发生了混杂。\n# bug复现 为了复现以上bug,使用 以下demo\n每次打开这个新页面都会在屏幕上显示一个随机得数字。使用pinia.use(piniaPluginPersistedstate)使这个页面刷新时，这个数字不会发生改变。但是现在出现了一个bug，当新开一个界面的时候，上一次的界面点击刷新会变成新界面的数字。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 \u0026lt;style scoped\u0026gt; /*@/views/problem2/problem3.vue*/ \u0026lt;/style\u0026gt; \u0026lt;template\u0026gt; \u0026lt;h1\u0026gt;problem3\u0026lt;/h1\u0026gt; \u0026lt;div\u0026gt; \u0026lt;h2\u0026gt;number: {{ store.problem3Number.number }}\u0026lt;/h2\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script setup lang=\u0026#34;js\u0026#34;\u0026gt; import {onMounted} from \u0026#34;vue\u0026#34;; import useProblemStore from \u0026#34;@/stores/problemStore.js\u0026#34;; const store = useProblemStore() onMounted(() =\u0026gt; { if(!sessionStorage.getItem(\u0026#39;hasEntered\u0026#39;)){ store.problem3Number.number = Math.floor(Math.random() * 100) sessionStorage.setItem(\u0026#39;hasEntered\u0026#39;,true) } }) \u0026lt;/script\u0026gt; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 //@/stores/index.js import {createPinia} from \u0026#34;pinia\u0026#34;; import piniaPluginPersistedstate from \u0026#34;pinia-plugin-persistedstate\u0026#34;; const pinia = createPinia(); pinia.use(piniaPluginPersistedstate); export default pinia; //@/stores/problemStore.js import {defineStore} from \u0026#34;pinia\u0026#34;; import {ref} from \u0026#34;vue\u0026#34;; const useProblemStore = defineStore( \u0026#34;problem\u0026#34;, () =\u0026gt; { const problem3Number = ref({ number: 0, }); return { problem3Number, }; }, { persist: true, } ); export default useProblemStore; # 解析 当我使用pinia.use(piniaPluginPersistedstate)时，实际上是将pinia存在了浏览器中的localstorage中，但是一个浏览器只有一个localstorage，所以两个不同的页面对pinia修改发生了数据的冲突，为了使这个问题解决。我们需要把pinia的储存更改到sessionstorage中，因为这个位置才是每个界面单独拥有的。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 import {createPinia} from \u0026#34;pinia\u0026#34;; import piniaPluginPersistedstate from \u0026#34;pinia-plugin-persistedstate\u0026#34;; import {watch} from \u0026#34;vue\u0026#34;; const pinia = createPinia(); pinia.use(({store}) =\u0026gt; { const savedState = sessionStorage.getItem(store.$id) if (savedState) { store.$patch(JSON.parse(savedState)) } watch(() =\u0026gt; store.$state, (newState) =\u0026gt; { sessionStorage.setItem(store.$id, JSON.stringify(newState)) }, {deep: true}) }) // pinia.use(piniaPluginPersistedstate); export default pinia; ","date":"2024-04-20T17:44:18+08:00","permalink":"http://150.158.146.137/p/%E4%BD%BF%E7%94%A8piniapluginpersistedstate%E5%AF%BC%E8%87%B4%E5%A4%9A%E8%B4%A6%E5%8F%B7%E7%99%BB%E5%BD%95%E7%BD%91%E9%A1%B5%E6%97%B6%E4%BF%A1%E6%81%AF%E5%86%B2%E7%AA%81bug/","title":"使用piniaPluginPersistedstate导致多账号登录网页时信息冲突bug"}]